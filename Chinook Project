--The following code is based off of my analysis of a large database. This database is titled 'Chinook' and it contains 11 tables: albums, artists, customers, employees, genres, invoice_items, invoices, media_types, playlist_track, playlists, and tracks. 

--Which genres generate the most revenue?
SELECT g.Name AS Genre,
SUM(ii.UnitPrice * ii.Quantity) AS Revenue
FROM chinook.invoice_items ii
JOIN chinook.tracks t ON ii.TrackId = t.TrackId
JOIN chinook.genres g ON t.GenreId = g.GenreId
GROUP BY g.Name
ORDER BY Revenue DESC
;

--Who are the top 5 customers by total spending, and what country are they from?
SELECT c.CustomerId,
c.FirstName,
c.LastName,
c.Country,
SUM(i.Total) AS TotalSpent
FROM chinook.customers c
JOIN chinook.invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.CustomerId
ORDER BY TotalSpent DESC
LIMIT 5
;

--Which composers have the most tracks in the database, and how much revenue do their tracks generate?
SELECT t.Composer,
COUNT(t.TrackId) AS TotalTracks,
SUM(ii.UnitPrice * ii.Quantity) AS TotalRevenue
FROM chinook.tracks t
JOIN chinook.invoice_items ii ON t.TrackId = ii.TrackId
WHERE t.Composer IS NOT NULL
GROUP BY t.Composer
ORDER BY TotalRevenue DESC
LIMIT 10
;


--Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT CustomerId,
FirstName,
LastName,  
Country
FROM chinook.customers
WHERE Country != 'USA'
;

--Show only the Customers from Brazil.
SELECT CustomerId,
FirstName,
LastName,
Country
FROM chinook.customers
WHERE Country = 'Brazil'
;

--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT c.FirstName,
c.LastName,
i.InvoiceId,
i.InvoiceDate,
i.BillingCountry
FROM chinook.customers c
RIGHT JOIN chinook.invoices i ON c.CustomerId = i.CustomerId
WHERE c.Country = 'Brazil'
;

--Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE Title LIKE  '%Sales% %Agent%'
;

--Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM chinook.invoices
ORDER BY BillingCountry
;

--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT e.FirstName,
e.LastName,
i.InvoiceId
FROM chinook.employees e
JOIN chinook.customers c ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.Total AS InvoiceTotal,
c.FirstName || ' ' || c.LastName AS CustomerName,
c.Country AS CustomerCountry,
e.FirstName || ' ' || e.LastName AS SalesAgentName
FROM chinook.invoices i
JOIN chinook.customers c ON i.CustomerId = c.CustomerId
JOIN chinook.employees e ON c.SupportRepId = e.EmployeeId
ORDER BY e.LastName, c.LastName
;

--How many Invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
;

--What are the total sales for 2009?
SELECT SUM(Total)
FROM chinook.invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
;

--Write a query that includes the purchased track name with each invoice line ID.
SELECT ii.InvoiceLineId,
t.Name
FROM chinook.invoice_items ii
JOIN chinook.tracks t ON ii.TrackId = t.TrackId
;

--Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT ii.InvoiceLineId,
t.Name,
ar.Name
FROM chinook.invoice_items ii
LEFT JOIN chinook.tracks t ON ii.TrackId = t.TrackId
INNER JOIN chinook.albums al ON t.AlbumId = al.AlbumId
LEFT JOIN chinook.artists ar ON al.ArtistId = ar.ArtistId
;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS TrackName,
al.Title AS AlbumName,
mt.Name AS MediaType,
g.Name AS Genre
FROM chinook.tracks t
JOIN chinook.albums al ON t.AlbumId = al.AlbumId
JOIN chinook.media_types mt ON t.MediaTypeId = mt.MediaTypeId
JOIN chinook.genres g ON t.GenreId = g.GenreId
ORDER BY t.Name
;

--Show the total sales made by each sales agent.
SELECT e.FirstName,
e.LastName,
SUM(i.Total) AS TotalSales
FROM chinook.employees e
JOIN chinook.customers c 
ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i 
ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.LastName
;

--Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName,
e.LastName,
ROUND(SUM(i.Total),2) AS TotalSales_2009
FROM chinook.employees e
JOIN chinook.customers c ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
AND i.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY e.FirstName
ORDER BY TotalSales_2009 DESC LIMIT 1
;
